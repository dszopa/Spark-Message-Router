buildscript {
    ext.kotlin_version = '1.1.3-2'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Jetty Websocket API for Session class
    compile "org.eclipse.jetty.websocket:websocket-api:9.4.4.v20170414"

    // Utilities
    compile "io.github.lukehutch:fast-classpath-scanner:2.4.2"
    compile "org.json:json:20160810"
    compile 'com.google.code.gson:gson:2.8.1'

    // Testing
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.mockito:mockito-core:2.8.47"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.0.1"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(assemble)) {
        signArchives.enabled = false
    }
}

group = "io.github.dszopa"
archivesBaseName = "message-router"
version = "1.1.1"

def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : ""
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : ""

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Spark Message Router'
                packaging 'jar'
                description 'Improved Spark socket message handling, using frameworks like SocketIO for inspiration'
                url 'https://github.com/dszopa/Spark-Message-Router'

                scm {
                    url 'scm:git@github.com:dszopa/Spark-Message-Router.git'
                    connection 'scm:git@github.com:dszopa/Spark-Message-Router.git'
                    developerConnection 'scm:git@github.com:dszopa/Spark-Message-Router.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/dszopa/Spark-Message-Router/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'dszopa'
                        name 'Daniel Szopa'
                        email 'szopanator@gmail.com'
                    }
                }
            }
        }
    }
}